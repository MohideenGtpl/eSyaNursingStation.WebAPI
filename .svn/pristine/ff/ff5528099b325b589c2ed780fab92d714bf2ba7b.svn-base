using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace eSyaNursingStation.DL.Entities
{
    public partial class eSyaEnterprise : DbContext
    {
       

        public static string _connString = "";
        public eSyaEnterprise()
        {
        }

        public eSyaEnterprise(DbContextOptions<eSyaEnterprise> options)
            : base(options)
        {
        }
        public virtual DbSet<GtIpnscd> GtIpnscd { get; set; }
        public virtual DbSet<GtIpnsch> GtIpnsch { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer(_connString);
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity<GtIpnscd>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.Uhid, e.Ipnumber, e.NscontrolId });

                entity.ToTable("GT_IPNSCD");

                entity.Property(e => e.Uhid).HasColumnName("UHID");

                entity.Property(e => e.Ipnumber).HasColumnName("IPNumber");

                entity.Property(e => e.NscontrolId)
                    .HasColumnName("NSControlID")
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);

                entity.Property(e => e.Value).HasMaxLength(500);

                entity.Property(e => e.ValueType).HasMaxLength(20);
            });

            modelBuilder.Entity<GtIpnsch>(entity =>
            {
                entity.HasKey(e => new { e.BusinessKey, e.Uhid, e.Ipnumber });

                entity.ToTable("GT_IPNSCH");

                entity.Property(e => e.Uhid).HasColumnName("UHID");

                entity.Property(e => e.Ipnumber).HasColumnName("IPNumber");

                entity.Property(e => e.AssessmentStatus)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.CreatedTerminal)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.FormId)
                    .IsRequired()
                    .HasColumnName("FormID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedTerminal).HasMaxLength(50);
            });
        }
    }
}
